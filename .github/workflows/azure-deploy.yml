name: Deploy to Azure

on:
  push:
    branches: [ main, dev/phase-3 ]
  workflow_dispatch:

env:
  AZURE_WEBAPP_BACKEND_NAME: sync-watch-api
  AZURE_WEBAPP_FRONTEND_NAME: sync-watch-web
  NODE_VERSION: '18.x'

jobs:
  test:
    runs-on: ubuntu-latest
    name: Run Tests
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build shared types
      run: npm run build --workspace=packages/shared-types
    
    - name: Run backend build
      run: npm run build:backend
    
    - name: Run frontend build
      run: npm run build:web
      env:
        VITE_API_URL: https://${{ env.AZURE_WEBAPP_BACKEND_NAME }}.azurewebsites.net
    
    # Skip tests for now as they require Docker/DB setup
    # - name: Run tests
    #   run: npm test

  deploy-backend:
    runs-on: ubuntu-latest
    needs: test
    name: Deploy Backend to Azure
    environment: production
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build shared types
      run: npm run build --workspace=packages/shared-types
    
    - name: Build backend
      run: npm run build:backend
    
    - name: Create deployment package
      run: |
        mkdir deploy-backend
        cp -r backend/dist deploy-backend/
        cp -r backend/package*.json deploy-backend/
        cp -r packages deploy-backend/
        # Create startup script
        echo "cd /home/site/wwwroot && npm install --production && node dist/server.js" > deploy-backend/startup.sh
    
    - name: Deploy to Azure Backend App Service
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_BACKEND_NAME }}
        publish-profile: ${{ secrets.AZURE_BACKEND_PUBLISH_PROFILE }}
        package: deploy-backend

  deploy-frontend:
    runs-on: ubuntu-latest
    needs: test
    name: Deploy Frontend to Azure
    environment: production
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build shared types
      run: npm run build --workspace=packages/shared-types
    
    - name: Build frontend
      run: npm run build:web
      env:
        VITE_API_URL: https://${{ env.AZURE_WEBAPP_BACKEND_NAME }}.azurewebsites.net
        VITE_ENABLE_GUEST_LOGIN: 'true'
    
    - name: Create deployment package for SPA
      run: |
        mkdir deploy-frontend
        cp -r web/dist/* deploy-frontend/
        # Create web.config for SPA routing
        cat > deploy-frontend/web.config << 'EOF'
        <?xml version="1.0" encoding="utf-8"?>
        <configuration>
          <system.webServer>
            <rewrite>
              <rules>
                <rule name="Handle History Mode and hash fragment" stopProcessing="true">
                  <match url="(.*)" />
                  <conditions logicalGrouping="MatchAll">
                    <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="true" />
                    <add input="{REQUEST_FILENAME}" matchType="IsDirectory" negate="true" />
                  </conditions>
                  <action type="Rewrite" url="/index.html" />
                </rule>
              </rules>
            </rewrite>
            <staticContent>
              <mimeMap fileExtension=".json" mimeType="application/json" />
              <mimeMap fileExtension=".woff" mimeType="application/font-woff" />
              <mimeMap fileExtension=".woff2" mimeType="application/font-woff2" />
            </staticContent>
          </system.webServer>
        </configuration>
        EOF
    
    - name: Deploy to Azure Frontend App Service
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_FRONTEND_NAME }}
        publish-profile: ${{ secrets.AZURE_FRONTEND_PUBLISH_PROFILE }}
        package: deploy-frontend

  health-check:
    runs-on: ubuntu-latest
    needs: [deploy-backend, deploy-frontend]
    name: Health Check
    
    steps:
    - name: Wait for deployment to settle
      run: sleep 30
    
    - name: Check Backend Health
      run: |
        response=$(curl -s -o /dev/null -w "%{http_code}" https://${{ env.AZURE_WEBAPP_BACKEND_NAME }}.azurewebsites.net/health || echo "000")
        if [ "$response" = "200" ]; then
          echo "‚úÖ Backend health check passed"
        else
          echo "‚ùå Backend health check failed with status: $response"
          exit 1
        fi
    
    - name: Check Frontend Health
      run: |
        response=$(curl -s -o /dev/null -w "%{http_code}" https://${{ env.AZURE_WEBAPP_FRONTEND_NAME }}.azurewebsites.net || echo "000")
        if [ "$response" = "200" ]; then
          echo "‚úÖ Frontend health check passed"
        else
          echo "‚ùå Frontend health check failed with status: $response"
          exit 1
        fi
    
    - name: Deployment Summary
      run: |
        echo "üöÄ Deployment completed successfully!"
        echo "üîó Backend URL: https://${{ env.AZURE_WEBAPP_BACKEND_NAME }}.azurewebsites.net"
        echo "üîó Frontend URL: https://${{ env.AZURE_WEBAPP_FRONTEND_NAME }}.azurewebsites.net"